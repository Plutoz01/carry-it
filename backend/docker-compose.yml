version: '3.7'
services:
  order-service:
    container_name: order-service
    image: carry-it/order-ms:latest
    restart: always
    ports:
      - 8101:8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://pg-db/carryit-order
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - pg-db
    healthcheck:
      test: curl -f http://localhost:8080/actuator/health || exit 1
      interval: 10s
      retries: 3

  vehicle-service:
    container_name: vehicle-service
    image: carry-it/vehicle-ms:latest
    restart: always
    ports:
      - 8102:8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://pg-db/carryit-vehicle
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - pg-db
    healthcheck:
      test: curl -f http://localhost:8080/actuator/health || exit 1
      interval: 10s
      retries: 3

  graphql-api:
    container_name: graphql-api
    image: carry-it/graphql-api:latest
    restart: always
    ports:
      - 4000:4000
    environment:
      ORDER_SERVICE_URL: http://order-service:8080/graphql
      VEHICLE_SERVICE_URL: http://vehicle-service:8080/graphql
    depends_on:
      - order-service
      - vehicle-service

  pg-db:
    container_name: postgres-db
    image: postgres:13.1
    restart: on-failure
    ports:
      - 5432:5432
    volumes:
      - ./ops/postgres/init:/docker-entrypoint-initdb.d:ro
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  pg-admin:
    container_name: pgAdmin4
    image: dpage/pgadmin4:latest
    restart: on-failure
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./ops/pgadmin/servers.json:/pgadmin4/servers.json:ro
    ports:
      - 8080:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@carryit.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      # Application log level - one of:
      #   CRITICAL 50
      #   ERROR    40
      #   WARNING  30
      #   SQL      25
      #   INFO     20
      #   DEBUG    10
      #   NOTSET    0
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 30

volumes:
  postgres-data:
  pgadmin-data:
